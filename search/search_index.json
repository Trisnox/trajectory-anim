{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Trajectory Anim","text":""},{"location":"#trajectory-anim","title":"Trajectory Anim","text":"<p>Blender add-on to quickly animate by drawing trajectory line.</p> <p>Similar to <code>Follow Path</code> constraints, you can animate an object by drawing a trajectory line, but much more convenient and faster than using the constraints. Aside from following and/or rotating along the path, you can also draw trajectory line to represent rotation. Not only that, but you can also draw intersection line in your trajectory line to represent timing chart, which give better control over timing/easing.</p> <p>Main repository github.com/Trisnox/trajectory-anim/</p> <ul> <li> <p> Installation</p> <p>Guide on how to install the add-on</p> <p> Installation</p> </li> <li> <p> Tutorial/Guide</p> <p>Quick Guide on how to use the add-on</p> <p> Add-on Tutorial</p> </li> </ul> <p>Or if you're looking for an in-depth explanation about certain operator/button</p> <ul> <li> <p> Main Panel</p> <p>Main Panel Main panel to animate the position or rotation, alongside its settings</p> <p> Main Panel</p> </li> <li> <p> Stroke Panel</p> <p>Stroke Panel Panel to operate with stroke type selection, alongside its operator correspond to the stroke types</p> <p> Stroke Panel</p> </li> <li> <p> Annotation Panel</p> <p>Annotation Panel Panel to show annotation layers for convenience</p> <p> Annotation Panel</p> </li> <li> <p> Grease Pencil Panel</p> <p>Grease Pencil Panel Panel to set Active Grease Pencil, and to show grease pencil layers for convenience</p> <p> Grease Pencil Panel</p> </li> </ul> <p>Or other topics</p> <ul> <li> <p> Timing Chart</p> <p>Timing Chart Page explaining about timing chart integration with trajectory stroke</p> <p> Timing Chart</p> </li> </ul>"},{"location":"#features","title":"Features","text":"<ul> <li>Timing Chart: Similar to Timing Chart, you can draw intersection line that will act as a timing. Starting and ending points is not required to be intersected</li> <li>Multi Target: You can apply position/rotation to as many objects/bones as you want</li> <li>Global/Local Orientation: You can choose whether you want to move or rotate the object through global axis, or local axis</li> <li>Relativity: You can choose whether you want snap along the path, or relative to its current position</li> <li>Rotate Along Path: Similar to using <code>Follow Curve</code>, this will cause object to rotate along the path</li> <li>Automatic Tracking: Track axis and up axis are determined automatically based off the given path, you can also manually input your own track axis and up axis</li> <li>Timings: You can set the duration to your liking, or even add step frame to skip every x frames</li> <li>Stroke Operators: Many operator to quickly tweak your strokes</li> <li>Layers: No need to draw everything using single layer, you can use layers and script will only animate from strokes belonging to the active layer</li> <li>Supports Many Types: From annotation, grease pencil, or even curve object</li> </ul>"},{"location":"#issues","title":"Issues","text":"<p>If you encounter any issues or bug, please report them to the issues page</p>"},{"location":"install/","title":"Installation","text":""},{"location":"install/#requirements","title":"Requirements","text":"<p>Make sure your Blender version is 4.3 or above</p>"},{"location":"install/#blender","title":"Blender","text":"<p>TBD when addon is approved on https://extensions.blender.org/</p>"},{"location":"install/#github","title":"Github","text":"<p>Download the latest release from github. Link https://github.com/Trisnox/trajectory-anim/releases, choose <code>Source Code (zip)</code>, or download the files directly from master branch as zip.</p> <p>After you've downloaded the files, you can either:</p> <ul> <li>Drag and drop the <code>.zip</code> file into the Blender window, and then confirm</li> <li>Install add-on through <code>Edit &gt; Preferences &gt; Add-on &gt; Install from disk</code>. Make sure to enable add-on if you haven't.</li> </ul>"},{"location":"install/#panel","title":"Panel","text":"<p>After add-on is installed, <code>TrajectAnim</code> panel will appear at 3d viewport </p>"},{"location":"tutorial/","title":"Add-on Tutorial","text":"<p>Info</p> <p>The first drawn stroke/first curve spline will be used as the trajectory line, anything besides that will be ignored or used to calculate intersection. With that being said, you must draw trajectory as single continuous line. There is also stroke operator such as <code>Delete Active Frame</code> or <code>Delete All Strokes</code> to easily remove all strokes.</p>"},{"location":"tutorial/#quick-tutorial","title":"Quick Tutorial","text":"<p>The fastest way to use this addon is to:</p> <ul> <li>Select an object(s) or bone(s)</li> <li>Select Annotation Tool</li> <li>If you want to draw on surface, make sure annotation placement is set to stroke, otherwise set to 3D cursor and make sure 3D cursor is snapped to the active object</li> <li>Draw trajectory line that represent path or rotation</li> <li>Press <code>Animate Position</code> / <code>Animate Position</code></li> </ul>"},{"location":"tutorial/#timing-chart","title":"Timing Chart","text":"<p>Info</p> <p>Only applies to annotation and grease pencil</p> <p>Similar to the concept of Timing Chart, you can draw intersection line to represent timing. Each intersection will make that point as the target position, starting and ending is inserted by default, so there is no need to intersect both start and end. This is optional, but this allow for better timing control.</p> <p>It's a good practice to always draw intersection on spots where sharp turn (eg: before/after turning, middle of the rotation, etc) is encountered. This is to ensure that object doesn't skip over certain path.</p> <p></p> <p>The order of interection does not matter. You can draw intersection line in any order, as long they intersect with the main stroke, the intersection will be recognized.</p> <p>Warning</p> <p>Especially when using annotation on 3D cursor, do not shift your view. Calculating intersection on 3D space is somewhat sensitive, even a slight offset will cause that intersection to fail. Intersection lines should be parralel with the main stroke</p>"},{"location":"tutorial/#stroke-and-target-object","title":"Stroke and Target Object","text":"<p>Inside the main panel, there is list of target. By default is uses <code>Selected</code> behaviour, which will use all selected object as the target. You can change this to <code>List</code> which allow better control for object selection.</p> <p>And at lowermost panel, there is stroke panel. <code>Animate Position</code>/<code>Animate Rotation</code> will use the source target defined by that property. By default, it uses <code>Automatic</code>, which will always default to annotation if the active object is not a grease pencil or curve.</p> <p>For quick usage, use annotation. Annotation can be accessed everywhere, and is very quick and easy. Unfortunately, annotation strokes are read-only (on bpy API), and the operation are limited to drawing and erasing.</p> <p>For ease of use, use grease pencil. They have full control over everything, editing stroke, keyframe editing, etc. Unfortunately using grease pencil might be quite the hassle since you need to switch modes every so often. Also, when using grease pencil, it is recommended to use <code>List</code> as the target object.</p> <p>Curve is somewhat redundant since <code>Follow Path</code> object constraints is made to work with that, they also have much better result comparing with this add-on. Either way, the process is similar to grease pencil, you can edit or add points to tweak the path/rotation. Also, curve doesn't support intersection nor bezier points.</p>"},{"location":"tutorial/#animate-position","title":"Animate Position","text":"<p>After target object/bone is initialized, simply draw your stroke by using annotation or grease pencil (use the grease pencil panel to link grease pencil data).</p> <p>After that, press <code>Animate Position</code> to animate the object/bone.</p> <p></p> <p>In order to make object rotate along path, simply enable <code>Rotate Along Path</code> checkbox.</p> <p></p> <p>You can also set position offset to offset the rotation.</p>"},{"location":"tutorial/#animate-rotation","title":"Animate Rotation","text":"<p>For rotation, the <code>Rotation Center</code> property will be used to calculate the rotation. By default it uses <code>3D Cursor</code>, however <code>Object</code> will use the first target from the list, it uses object's origin position or bone matrix position.</p> <p>After target object/bone is initialized, simply draw your stroke by using annotation or grease pencil (use the grease pencil panel to link grease pencil data). The stroke will define the rotation, eg: semi circle will represent 180\u00b0 rotation, a full circle will represent 360\u00b0, etc.</p> <p></p> <p>Rotation is done by using global axis by default. You can set the orientation in the settings panel.</p>"},{"location":"annotation_panel/","title":"Annotation Panel","text":""},{"location":"annotation_panel/#overview","title":"Overview","text":"<p>If annotation data exist, this panel will show layer operations for convenience.</p> <p><code>Insert Blank Keyframe</code> is operator to add blank keyframe on current frame, this is useful to reduce clutter in scene (aside from hiding the layer). When <code>Only Active Layer</code> is enabled, then only the currently active layer will be affected, otherwise all other layer wil be affected.</p>"},{"location":"grease_pencil_panel/","title":"Grease Pencil Panel","text":""},{"location":"grease_pencil_panel/#overview","title":"Overview","text":""},{"location":"grease_pencil_panel/#active-grease-pencil","title":"Active Grease Pencil","text":"<p>This property is used to link grease pencil data so that script know which grease pencil to use and to display layers in this panel for convenience. Another use is for converting curve into grease pencil, if this data exist, then curve will be directly converted into grease pencil keyframe.</p> <p>This is optional, can be left blank, though the script prioritized active grease pencil data over selected ones.</p> <p>Layers</p> <p>Unfortunately, grease pencil layers API lacks active index, so the layers cannot always be shown. Layers will only be shown if you select the grease pencil object correspond to the active ones.</p>"},{"location":"main_panel/","title":"Main Panel","text":""},{"location":"main_panel/#overview","title":"Overview","text":""},{"location":"main_panel/#animate","title":"Animate","text":"<ul> <li>Animate Position: Animate object/bone's position based off given stroke path</li> <li>Animate Rotation: Animate object/bone's rotation based off given stroke path</li> </ul>"},{"location":"main_panel/#target","title":"Target","text":"<ul> <li>Target: Behaviour to set the target list</li> <li>Target Enum: List of affected objects or bones</li> </ul>"},{"location":"main_panel/#settings","title":"Settings","text":"<ul> <li>Set 3D Cursor Automatically: When enabled, 3D cursor will be automatically snapped to active object. Does not work for pose bone when using <code>Selected</code></li> <li>Position Orientation: Whether to move based off global or local axis</li> <li>Rotation Orientation: Whether to rotate based off global or local axis</li> <li>Rotation Center: Origin used to calculate the rotation of a stroke</li> </ul> <ul> <li>Conversion Method: Whether to use whole points, or the intersection only</li> <li>Timing: Can be set to be either each individual points/intersection, or set duration</li> <li>Total Duration: Total frames will not exceed this number. Only appear if <code>Timing</code> is set to <code>Duration</code></li> <li>Frame Step: Skip every this many frame</li> </ul> <ul> <li>Interpolation: Interpolation type that will be used for keyframes</li> </ul> <ul> <li>Relative to Stroke: When enabled, <code>Animate Position</code> position will be relative to its current position and the stroke path</li> <li>Initial Rotation: When enabled, both <code>Animate Position</code> and <code>Animate Rotation</code> will account the object/bone initial rotation before applying the rotation</li> <li>Rotate Along Path: When enabled, <code>Animate Position</code> will rotate the object along the path</li> <li>Reverse Path: When enabled, script will reverse the order of the points</li> <li>Delete After: When enabled, annotation/grease pencil active frame or curve object will be deleted after using <code>Animate Position</code> or <code>Animate Rotation</code></li> </ul> <ul> <li>Movement Axis: Defines which axis will affect <code>Animate Position</code></li> <li>Rotation Axis: Defines which axis will affect <code>Animate Position</code> (if <code>Rotate Along Path</code> is enabled) or <code>Animate Rotation</code></li> </ul>"},{"location":"main_panel/#track-settings","title":"Track Settings","text":"<ul> <li>Only Rotate Up: When enabled, <code>Animate Position</code> will only rotate the up axis only. <code>Rotation Axis</code> will be suppressed</li> <li>Determine Axis Automatically: When enabled, track axis and up axis will be determined automatically</li> <li>Track/Forward Axis: Forward axis. Disabled if <code>Determine Axis Automatically</code> is enabled</li> <li>Up Axis: Up axis. Disabled if <code>Determine Axis Automatically</code> is enabled</li> </ul>"},{"location":"main_panel/#position-offset","title":"Position Offset","text":"<p>Property to offset the position when animating the position. Only works for <code>Animate Position</code>.</p>"},{"location":"main_panel/#rotation-offset","title":"Rotation Offset","text":"<p>Property to offset the rotation when animating the position. Works for both <code>Animate Position</code> (if <code>Rotate Along Path</code> is enabled) and <code>Animate Rotation</code>.</p>"},{"location":"main_panel/#flip-detection","title":"Flip Detection","text":"<ul> <li>Smooth Flips: When enabled, script will attempt to negate rotation that is greater than the flip threshold. Only works for <code>Animate Position</code> while <code>Rotate Along Path</code> is enabled</li> <li>Map to Zero: When enabled, flips will not be greater than 360\u00b0 and is instead set to 0. Only works for Euler and if <code>Smooth Flips</code> is enabled</li> <li>Flip Threshold: Angle to define flips. If angle difference is greater than this, then proceed to negate this rotation</li> </ul>"},{"location":"main_panel/animate_position/","title":"Animate Position","text":"<p>Info</p> <p>Stroke mentioned in this page depends on the stroke detection on <code>Source Stroke</code></p>"},{"location":"main_panel/animate_position/#animate-position","title":"Animate Position","text":"<p>Animate object/bone position based off given stroke path. You can also draw interection line to fine tune your timing.</p> <p></p>"},{"location":"main_panel/animate_position/#rotating-along-path","title":"Rotating Along Path","text":"<p>By enabling <code>Rotate Along Path</code>, you can make the object to rotate along the path in a similar manner with <code>Follow Path</code> object constraint with <code>Follow Curve</code> enabled.</p> <p></p> <p>Rotation Types</p> <p>It is recommended to use Quaternion or Euler rotation type. Any other rotation type than Quaternion or Euler will throw error.</p>"},{"location":"main_panel/animate_position/#settings","title":"Settings","text":""},{"location":"main_panel/animate_position/#position-orientation","title":"Position Orientation","text":"<p>When set to global, target position will move across global axis, while local will just copy local translation into the object.</p>"},{"location":"main_panel/animate_position/#relative-to-stroke","title":"Relative to Stroke","text":"<p>When enabled, object position will be relative to its current position with the stroke path.</p> <p> </p>"},{"location":"main_panel/animate_position/#rotate-along-path","title":"Rotate Along Path","text":"<p>When enabled, each point will have rotation that is generated by using 2/3 vector (tangent, right, up) by using code from this forum. These rotation will correspond to the path.</p> <p>Inaccuracy</p> <p>Rotation generated using this script does not yield same result with the constraint. Even though they appear visually correct, the errors can be seen when the frames are interpolated (eg, using frame step that is higher than 1), which this script attempt to fix it by negating the rotation (assuming flip detection is enabled). However, the negation had worse result for Euler.</p>"},{"location":"main_panel/animate_position/#movement-axis","title":"Movement Axis","text":"<p>Used to include/exclude certain axis from being moved.</p>"},{"location":"main_panel/animate_position/#position-offset","title":"Position Offset","text":"<p>Position applied prior to final transformation. Useful when using <code>surface</code> placement so that the object will not clip through the surface.</p>"},{"location":"main_panel/animate_position/#tracking","title":"Tracking","text":"<p>When <code>Rotate Along Path</code> is enabled, these settings become relevant</p>"},{"location":"main_panel/animate_position/#track-settings","title":"Track Settings","text":""},{"location":"main_panel/animate_position/#rotation-axis","title":"Rotation Axis","text":"<p>Used to include/exclude certain axis from being rotated.</p>"},{"location":"main_panel/animate_position/#only-rotate-up","title":"Only Rotate Up","text":"<p>When enabled, object will only rotate axis correspond to world up axis. Which supposedly result much cleaner or smoother rotation compared when using all axes.</p>"},{"location":"main_panel/animate_position/#trackforward-axis-and-up-axis","title":"Track/Forward Axis and Up Axis","text":"<p>If <code>Determine Axis Automatically</code> is enabled, then track and up axis will be determined automatically depending on the stroke path position. Otherwise, you can manually set the axis, which can be used if you want to achieve specific rotation direction. Also, when using automatic, previously used axis will be displayed within the panel.</p>"},{"location":"main_panel/animate_position/#rotation-offset","title":"Rotation Offset","text":"<p>This setting is used for tracking only, as it is redundant for <code>Animate Rotation</code>.</p> <p>By default, <code>Auto Fix Rotation</code> is enabled, which has pre-determined values to properly fix rotation. You can manually set rotation to offset the rotation prior to final transformation.</p>"},{"location":"main_panel/animate_position/#flip-detection","title":"Flip Detection","text":"<p>As previously said from <code>Rotate Along Path</code>, this panel allows to disable such feature. When <code>Smooth Flips</code> is enabled, if the rotation angle between previous rotation and current rotation is greater than the value set on <code>Flip Threshold</code>, then the rotation will be negated.</p> <p><code>Map to Zero</code> is made for euler to prevent rotation going over 360\u00b0, if rotation doesn't looked right, this boolean can be disabled.</p>"},{"location":"main_panel/animate_rotation/","title":"Animate Rotation","text":"<p>Info</p> <p>Stroke mentioned in this page depends on the stroke detection on <code>Source Stroke</code></p> <p>Rotation Types</p> <p>It is recommended to use Quaternion or Euler rotation type. Any other rotation type than Quaternion or Euler will throw error.</p>"},{"location":"main_panel/animate_rotation/#animate-rotation","title":"Animate Rotation","text":"<p>Animate object/bone rotation based off given stroke path. You can also draw interection line to fine tune your timing.</p> <p></p>"},{"location":"main_panel/animate_rotation/#settings","title":"Settings","text":""},{"location":"main_panel/animate_rotation/#rotation-orientation","title":"Rotation Orientation","text":"<p>When set to global, target rotation will rotate across global axis, while local will just copy local rotation into the object.</p>"},{"location":"main_panel/animate_rotation/#rotation-center","title":"Rotation Center","text":"<p>Since rotation needs to be calculated from world origin, this setting can help to offset the stroke depending on which setting it uses.</p> <p><code>3D Cursor</code> will calculate the rotation by using 3d cursor as the center.</p> <p><code>Object</code> will calculate the rotation by using origin from active object or first item in the target list if using list.</p> <p>Info</p> <p><code>Rotation Offset</code> is not used for this one as they are only used for tracking.</p>"},{"location":"main_panel/keyframe_setting/","title":"Keyframe Settings","text":""},{"location":"main_panel/keyframe_setting/#keyframe-settings","title":"Keyframe Settings","text":""},{"location":"main_panel/keyframe_setting/#conversion-method","title":"Conversion Method","text":"<p>By default it uses <code>Automatic</code>, which will use points if there is only single stroke, otherwise use intersection.</p> <p><code>Points</code> will use each individual point from stroke source. Only the first stroke will be recognized, everything else will be ignored.</p> <p><code>Intersection</code> will use the first stroke as the refernce, and then try to calculate intersection with other strokes. Only starting, intersection, and ending will be used. Please read <code>Timing Chart</code> for more info.</p>"},{"location":"main_panel/keyframe_setting/#timing","title":"Timing","text":"<p>Info</p> <p>Points mentioned in this section is depends on <code>Conversion Method</code> setting that you choose.</p> <p><code>Points</code> will use all points into keyframe.</p> <p><code>Duration</code> will try to fit all points into desired duration. Keyframes cannot have more than whatever the <code>Total Duration</code> is being set. If there are less keyframes than the total duration, then keyframe will be stretched, otherwise they will be shrinked.</p>"},{"location":"main_panel/keyframe_setting/#frame-step","title":"Frame Step","text":"<p>Keyframe will be skipped every this many frame.</p> <p>By default it caps at 1, which will fill every frame. If set to 2, then keyframe will skip every 1 frame, 3 will skip every 2 frame, etc.</p>"},{"location":"main_panel/keyframe_setting/#interpolation","title":"Interpolation","text":"<p>Interpolation type used for each keyframe.</p> <p>Interpolation Types</p> <p>Currently there is only three main interpolation, linear, bezier, and constant. Honestly I think this is enough for most purpose, but let me know if I should add more or all interpolation into the list.</p>"},{"location":"main_panel/target_enum/","title":"Target List","text":""},{"location":"main_panel/target_enum/#target-list","title":"Target List","text":"<p>The box contain list of affected target object or bone.</p> <p>By default it uses <code>Selected</code>, which will insert all selected object or bone into the list. Ignored if object type is either <code>CURVE</code>, <code>GREASEPENCIL</code> or <code>ARMATURE</code>. This is recommended if you're using annotation.</p> <p>Using <code>List</code> allows you to manually select target object or bone. Unlike <code>Selected</code> which doesn't append both object and bone at the same time depending on the context mode, <code>List</code> is capable of having both object and bone regardless if you were no longer in pose mode or whether the object is no longer selected. This is recommended if you're using grease pencil or curve.</p> <p><code>List</code> have three operation:</p> <ul> <li><code>Add</code>: add all selected object into the list</li> <li><code>Remove</code>: remove selected entry from the list</li> <li><code>Substitute</code>: remove all entry, and then do the same operation as <code>Add</code></li> </ul>"},{"location":"other/timing_chart/","title":"Timing Chart","text":"<p>Info</p> <p>Only applies to annotation and grease pencil</p> <p>This script support similar concept to Timing Chart. You can draw intersection line to represent timing. Each intersection will make that point as the target position, starting and ending is inserted by default, so there is no need to intersect both start and end.</p> <p>With this, you can fine tune the timing accordingly.</p> <p></p> <p>It's a good practice to always draw intersection on spots where sharp turn (eg: before/after turning, middle of the rotation, etc) is encountered. This is to ensure that object doesn't skip over certain path.</p> <p></p> <p>Warning</p> <p>Especially when using annotation on 3D cursor, do not shift your view. Calculating intersection on 3D space is somewhat sensitive, even a slight offset will cause that intersection to fail. Intersection lines should be parralel with the main stroke</p>"},{"location":"stroke_panel/","title":"Stroke Panel","text":""},{"location":"stroke_panel/#overview","title":"Overview","text":"<p>Stroke panel will have different operators depending on which type of stroke you choose.</p>"},{"location":"stroke_panel/#source-stroke","title":"Source Stroke","text":"<p>Stroke that will be used for most operations. By default <code>Automatic</code> will always default to annotation if there are no grease pencil or curve amongst the selected objects, otherwise use grease pencil or curve.</p> <p><code>Automatic</code> will always try to use that respective source if any.</p> <p>Annotation are easily accessible.</p> <p>Setting <code>Active Grease Pencil</code> will surpress any other grease pencil.</p> <p>Curve object has to be selected.</p>"},{"location":"stroke_panel/#overview-annotation","title":"Overview - Annotation","text":"<ul> <li><code>Delete Active Frame</code>: Delete active frame</li> <li><code>Convert to Curve</code>: Convert stroke into curve object. Can choose whether to keep annotation or remove them after, and/or to convert only the intersection or all points.</li> </ul> <p>Info</p> <p>Annotation API are limited to read-only (no API to add/remove stroke), so there is not much we can do about them.</p>"},{"location":"stroke_panel/#overview-grease-pencil","title":"Overview - Grease Pencil","text":"<ul> <li><code>Clear Excess Strokes</code>: Remove all but the first stroke</li> <li><code>Clear All Strokes</code>: Remove all strokes, but keep the keyframe</li> <li> <p><code>Delete Active Frame</code>: Delete active frame</p> </li> <li> <p><code>Self Intersect</code>: Depending on setting, can be used to add points to intersection, or to only include starting, intersection, and ending of the stroke. Excess strokes will be removed afterward</p> </li> <li><code>Convert to Curve</code>: Convert stroke into curve object. Can choose whether to keep annotation or remove them after, and/or to convert only the intersection or all points.</li> </ul>"},{"location":"stroke_panel/#overview-curve","title":"Overview - Curve","text":"<ul> <li><code>Convert to Grease Pencil</code>: Convert points into grease pencil stroke. Add a new keyframe on current frame if <code>Active Grease Pencil</code> is set, otherwise call <code>bpy.ops.object.convert()</code> (equivalent to <code>Object &gt; Convert &gt; Grease Pencil</code>) operator and set <code>Active Grease Pencil</code> to this newly created grease pencil.</li> </ul>"}]}